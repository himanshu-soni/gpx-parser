apply plugin: 'java-library'
// apply plugin: "com.github.dcendents.android-maven"
apply plugin: "com.jfrog.bintray"

group 'me.himanshusoni.gpxparser'
version '1.14'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.github.dcendents:android-maven-gradle-plugin:2.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
    }
}

repositories {
    jcenter()
    mavenCentral()
}


dependencies {
    // testCompile group: 'junit', name: 'junit', version: '4.12'
}

ext {
    bintrayRepo = "maven"
    bintrayName = "GPX-Parser"

    publishedGroupId = group
    libraryName = "GpxParser"
    artifact = "gpx-parser"

    libraryDescription = "GPX Parser"

    siteUrl = "https://github.com/himanshu-soni/gpx-parser"
    gitUrl = "https://github.com/himanshu-soni/gpx-parser.git"

    libraryVersion = version

    developerId = "himanshu-soni"
    developerName = "Himanshu Soni"
    developerEmail = "himanshusoni.me@gmail.com"

    licenseName = "The Apache Software License, Version 2.0"
    licenseUrl = "http://www.apache.org/licenses/LICENSE-2.0.txt"
    allLicenses = ["Apache-2.0"]
}


group = publishedGroupId
version = libraryVersion

install {
    repositories.mavenInstaller {
        pom.project {
            packaging "aar"
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

tasks.withType(Javadoc) {
    enabled = false
}

artifacts {
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file("local.properties").newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ["archives"]
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
        }
    }
}